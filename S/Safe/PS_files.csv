[PS] Safe Kernel Extensions Without Run-Time Checking - People @EECS,https://people.eecs.berkeley.edu/~necula/Papers/pcc_osdi96.ps
[PS] Safe Operators: Brackets Closed Forever - IRIF,https://www.irif.fr/~jch/safebrackets.ps.gz
[PS] Types for Safe Locking - Index of /,https://users.soe.ucsc.edu/~abadi/Papers/locks.ps
[PS] Safe and Flexible Dynamic Linking of Native Code,http://www.cs.cornell.edu/talc/papers/dynlink-revised/taldynlink.ps.gz
[PS] Cyclone: A safe dialect of C - Cornell Computer Science,http://www.cs.cornell.edu/projects/cyclone/papers/cyclone-safety.ps
[PS] Safe|A Semantic Technique for Transforming Programs in the ...,https://theory.stanford.edu/~aiken/publications/papers/toplas95.ps
[PS] Type-Safe Cast - UPenn CIS,https://www.cis.upenn.edu/~sweirich/papers/cast/cast.ps
[PS] Safe Open-Nested Transactions Through Ownership - supertech,http://supertech.csail.mit.edu/papers/safe.ps
[PS] Safe Constraint Queries 1 Introduction,http://www.cs.toronto.edu/~libkin/papers/sicomp-pods98.ps.gz
[PS] Flexible and Safe Resolution of File Conflicts - USENIX,https://www.usenix.org/publications/library/proceedings/neworl/full_papers/kumar.ps
[PS] Type-Safe Method Inlining - UCLA CS,http://www.cs.ucla.edu/~palsberg/course/purdue/cs565/S02/glew-palsberg01.ps
"[PS] Safe Exchange Planner i , i 2 f1::ng,",https://www.cs.cmu.edu/~sandholm/sep.icmas00_submission.ps
[PS] Safe Prime Generation with a Combined Sieve,https://eprint.iacr.org/2003/186.ps
[PS] Double-Speed Safe Prime Generation,https://eprint.iacr.org/2003/175.ps
[PS] SAFE horiz PMS289 v2.indd,https://www.anselm.edu/sites/default/files/Images/Logos/Admin%2520Offices/Campus%2520Safety/SAFE%2520horiz%2520PMS289%2520v2.eps
[PS] LC-Safe Promise.eps - Las-Cruces.org,https://www.las-cruces.org/DocumentCenter/View/5610/LC-Safe-Promise-logo-EPS
[PS] An E cient Non-Interactive Statistical Zero-Knowledge Proof System ...,https://cseweb.ucsd.edu/~daniele/papers/GMR.ps
[PS] Lyapunov Design for Safe Reinforcement Learning,https://www.jmlr.org/papers/volume3/perkins02a/perkins02a.ps
[PS] A statically safe alternative to virtual types,http://lampwww.epfl.ch/~odersky/papers/alt.ps.gz
[PS] Type-Safe Update Programming - Oregon State University,https://web.engr.oregonstate.edu/~erwig/papers/TypeSafeUpdates_ESOP03.ps.gz
[PS] Safe recursion with higher types and BCK-algebra 1 Introduction,https://www.dcs.ed.ac.uk/home/mxh/ptac.ps.gz
[PS] A mixed modal/linear lambda calculus with applications to ...,https://www.dcs.ed.ac.uk/home/mxh/csl97.ps.gz
[PS] Efficient and Safe-for-Space Closure Conversion - Yale FLINT Group,https://flint.cs.yale.edu/flint/publications/escc.ps.gz
[PS] On the Expressiveness of Pure Safe Ambients y - Inria,http://www-sop.inria.fr/mimosa/personnel/Pascal.Zimmer/papers/mscs_pure_ambients.ps.gz
"[PS] Integrating Segmentation and Paging Protection for Safe, Efficient ...",https://www.sigops.org/s/conferences/sosp/1999/slides/kernel/chiueh.ps
[PS] Zero-Safe Nets: The Individual Token Approach ?,http://groups.di.unipi.it/~ugo/individual.ps
[PS] Modeling Regular and Safe Concurrent Processes (Technical ...,http://mice.cs.columbia.edu/getTechreport.php%3FtechreportID%3D1281%26format%3Dps%26
[PS] On an Interpretation of Safe Recursion in Light A ne Logic,http://www.cs.ox.ac.uk/andrzej.murawski/papers/safe.ps
[PS] An Efficient and Safe Framework for Solving Optimization Problems,https://www.i3s.unice.fr/~cpjm/CeV/papers/scan-04.ps
"[PS] Designing safe, profitable automated stock trading agents using ...",http://www.cs.utexas.edu/users/ai-lab/pubs/GECCO06-trading.ps
